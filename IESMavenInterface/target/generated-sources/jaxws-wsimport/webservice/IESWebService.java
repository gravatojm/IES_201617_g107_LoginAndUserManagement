
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IES_WebService", targetNamespace = "http://webservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IESWebService {


    /**
     * 
     * @param password
     * @param mail
     * @return
     *     returns webservice.Clientes
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://webservice/", className = "webservice.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webservice/", className = "webservice.LoginResponse")
    @Action(input = "http://webservice/IES_WebService/loginRequest", output = "http://webservice/IES_WebService/loginResponse")
    public Clientes login(
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param mail
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logout", targetNamespace = "http://webservice/", className = "webservice.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://webservice/", className = "webservice.LogoutResponse")
    @Action(input = "http://webservice/IES_WebService/logoutRequest", output = "http://webservice/IES_WebService/logoutResponse")
    public boolean logout(
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param tipo
     * @param mail
     * @param nome
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editarCliente", targetNamespace = "http://webservice/", className = "webservice.EditarCliente")
    @ResponseWrapper(localName = "editarClienteResponse", targetNamespace = "http://webservice/", className = "webservice.EditarClienteResponse")
    @Action(input = "http://webservice/IES_WebService/editarClienteRequest", output = "http://webservice/IES_WebService/editarClienteResponse")
    public boolean editarCliente(
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "tipo", targetNamespace = "")
        int tipo);

    /**
     * 
     * @param password
     * @return
     *     returns java.util.List<webservice.Logger>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLog", targetNamespace = "http://webservice/", className = "webservice.GetLog")
    @ResponseWrapper(localName = "getLogResponse", targetNamespace = "http://webservice/", className = "webservice.GetLogResponse")
    @Action(input = "http://webservice/IES_WebService/getLogRequest", output = "http://webservice/IES_WebService/getLogResponse")
    public List<Logger> getLog(
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logoutToken", targetNamespace = "http://webservice/", className = "webservice.LogoutToken")
    @ResponseWrapper(localName = "logoutTokenResponse", targetNamespace = "http://webservice/", className = "webservice.LogoutTokenResponse")
    @Action(input = "http://webservice/IES_WebService/logoutTokenRequest", output = "http://webservice/IES_WebService/logoutTokenResponse")
    public boolean logoutToken(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param token
     * @return
     *     returns webservice.Clientes
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validateToken", targetNamespace = "http://webservice/", className = "webservice.ValidateToken")
    @ResponseWrapper(localName = "validateTokenResponse", targetNamespace = "http://webservice/", className = "webservice.ValidateTokenResponse")
    @Action(input = "http://webservice/IES_WebService/validateTokenRequest", output = "http://webservice/IES_WebService/validateTokenResponse")
    public Clientes validateToken(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listaClientes", targetNamespace = "http://webservice/", className = "webservice.ListaClientes")
    @ResponseWrapper(localName = "listaClientesResponse", targetNamespace = "http://webservice/", className = "webservice.ListaClientesResponse")
    @Action(input = "http://webservice/IES_WebService/listaClientesRequest", output = "http://webservice/IES_WebService/listaClientesResponse")
    public List<Object> listaClientes();

    /**
     * 
     * @param password
     * @param tipo
     * @param mail
     * @param nome
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removerCliente", targetNamespace = "http://webservice/", className = "webservice.RemoverCliente")
    @ResponseWrapper(localName = "removerClienteResponse", targetNamespace = "http://webservice/", className = "webservice.RemoverClienteResponse")
    @Action(input = "http://webservice/IES_WebService/removerClienteRequest", output = "http://webservice/IES_WebService/removerClienteResponse")
    public boolean removerCliente(
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "tipo", targetNamespace = "")
        int tipo);

    /**
     * 
     * @param password
     * @param tipo
     * @param mail
     * @param grupo
     * @param nome
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "criarCliente", targetNamespace = "http://webservice/", className = "webservice.CriarCliente")
    @ResponseWrapper(localName = "criarClienteResponse", targetNamespace = "http://webservice/", className = "webservice.CriarClienteResponse")
    @Action(input = "http://webservice/IES_WebService/criarClienteRequest", output = "http://webservice/IES_WebService/criarClienteResponse")
    public boolean criarCliente(
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "tipo", targetNamespace = "")
        int tipo,
        @WebParam(name = "grupo", targetNamespace = "")
        String grupo);

}
